name: SemVer Release Workflow

run-name: "Releasing ${{ github.event.repository.name }} #${{ github.run_number }}"

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version type to increment'
        required: true
        default: 'select'
        type: choice
        options:
          - select
          - major
          - minor
          - patch
      set_version:
        description: 'Set next SNAPSHOT version number explicitly (e.g., 1.2.3-SNAPSHOT). Leave empty to increment.'
        required: false

env:
  BRANCH_NAME: ${{ github.ref_name }}
  TRUNK_BRANCH_NAME: ${{ github.event.repository.default_branch }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-24.04
    if: github.repository_owner == 'ikmdev'
    steps:
      - name: Verify Input
        run: |
          if [[ -z "${{ inputs.set_version }}" && "${{ inputs.version_type }}" == "select" ]]; then
            echo "ERROR: Please select a valid version type (major, minor, patch) or provide a custom SNAPSHOT version."
            exit 1
          fi

      - name: Verify Is SNAPSHOT Version
        if: inputs.set_version != ''
        run: |
          if [[ -n "${{ inputs.set_version }}" && "${{ inputs.set_version }}" != *-SNAPSHOT ]]; then
            echo "ERROR: Please include the -SNAPSHOT suffix."
            exit 1
          fi
          
      - name: Verify Branch
        if: env.BRANCH_NAME != env.TRUNK_BRANCH_NAME
        run: |
          echo "ERROR: Attempting to release from branch ${{ env.BRANCH_NAME }}. Release from ${{ env.TRUNK_BRANCH_NAME }} branch only."
          exit 1

      - name: Shared Release Action
        uses: ikmdev/maven-semver-release-action@testing
        with:
          version_type: ${{ github.event.inputs.version_type }}
          set_version: ${{ github.event.inputs.set_version }}
          ikmdevops_pat: ${{secrets.IKMDEVOPS_PAT_TOKEN}}
          github_token: ${{secrets.GITHUB_TOKEN}}
          ossrh_username: ${{secrets.OSSRH_TOKEN_USER}}
          ossrh_token: ${{secrets.OSSRH_TOKEN_PASS}}
          gpg_key: ${{secrets.GPG_KEY}}
          gpg_passphrase: ${{secrets.GPG_PASSPHRASE}}
